@inject IProductService ProductService
@inject NavigationManager NavigationManager
@implements IDisposable

<div class="input-group">
    <input @bind-value="searchtext"
           @bind-value:event="oninput"
           type="search"
           list="products"
           @onkeyup="HandleSearch"
           class="form-control"
           @ref="searchInput" />
    <datalist id="products">
        @foreach (var item in suggestions)
        {
            <option>@item</option>
        }
    </datalist>
    <div class="input-group-append">
        <button class="btn btn-primary" @onclick=SearchProducts>
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
</div>

@code {
    private string searchtext = string.Empty;
    private List<string> suggestions = new List<string>();
    protected ElementReference searchInput;

    [Inject]
    public HttpInterceptorService Interceptor { get; set; }

    protected override void OnInitialized()
    {
        Interceptor.RegisterEvent();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await searchInput.FocusAsync();
        }
    }

    public void SearchProducts()
    {
        NavigationManager.NavigateTo($"search/{searchtext}/1");
    }

    public async Task HandleSearch(KeyboardEventArgs args)
    {
        if (args.Key == null || args.Key.Equals("Enter"))
        {
            SearchProducts();
        }
        else if (searchtext.Length > 1)
        {
            suggestions = await ProductService.GetProductSearchSuggestions(searchtext);
        }
    }

    public void Dispose()
    {
        Interceptor.DisposeEvent();
    }
}
